import{_ as s,o as i,c as a,R as n}from"./chunks/framework.sFPk6Hfx.js";const F=JSON.parse('{"title":"设计模式","description":"MVC + MVVM 模式MVC(Model-View-Controller)模型-视图-控制器使用MVC的目的就是将M和V的代码分离MVC是单向通信。也就是View跟Model，必须通过Controller来承上启下MVC和MVVM的区别并不是VM完全取代了C，只是在MVC的基础上增加了一层...","frontmatter":{"title":"设计模式","urlname":"ytsncc","date":"2020-11-28 17:19:48","updated":"2022-09-13 03:53:14","description":"MVC + MVVM 模式MVC(Model-View-Controller)模型-视图-控制器使用MVC的目的就是将M和V的代码分离MVC是单向通信。也就是View跟Model，必须通过Controller来承上启下MVC和MVVM的区别并不是VM完全取代了C，只是在MVC的基础上增加了一层...","tags":["语雀"]},"headers":[],"relativePath":"posts/yuque/设计模式.md","filePath":"posts/yuque/设计模式.md"}'),h={name:"posts/yuque/设计模式.md"},k=n("",12),l=[k];function t(p,e,E,r,d,g){return i(),a("div",null,l)}const c=s(h,[["render",t]]);export{F as __pageData,c as default};
